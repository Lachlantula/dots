"   /\/|   __       _                       
"  |/\/   / /      (_)                      
"        / /__   __ _  _ __ ___   _ __  ___ 
"       / / \ \ / /| || '_ ` _ \ | '__|/ __|
"      / / _ \ V / | || | | | | || |  | (__ 
"     /_/ (_) \_/  |_||_| |_| |_||_|   \___|
"
"     ( macOS/Darwin revision. )
"
"     ~/.vimrc by Lachlan Shoesmith (lachlantula).
"     Last updated: 2/2/19.

syntax on

" Plugins will be downloaded under the specified directory.
call plug#begin('~/.vim/plugged')

" Declare the list of plugins.
Plug 'posva/vim-vue'
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
Plug 'mattn/emmet-vim'
Plug 'rstacruz/vim-closer'
Plug 'scrooloose/nerdtree'
Plug 'itchyny/lightline.vim'
Plug 'junegunn/goyo.vim'
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'w0rp/ale'
Plug 'junegunn/limelight.vim'

" Deoplete.
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif
let g:deoplete#enable_at_startup = 1

" List ends here. Plugins become visible to Vim after this call.
call plug#end()

" Set theme (vimr only).
if has ("gui_vimr")
  colorscheme dracula
endif

" Hide --INSERT--, etc, since Lightline shows it.
set noshowmode
" Set Lightline theme.

let g:lightline = {
  \ 'colorscheme': 'darcula',
  \ }

" Make Vim read .md files as Markdown (.markdown) files.

au BufNewFile,BufFilePre,BufRead *.md set

" Change the cursor to my personal terminal one.
set guicursor=a:ver20-blinkon1

" Open a file tree with Ctrl+T.

map <C-T> :NERDTreeToggle<CR>

" Display relative line numbers

set number relativenumber

" Indentation

set expandtab
set shiftwidth=2
set autoindent
set smartindent
set tabstop=2
set softtabstop=2

" Set this variable to 1 to fix files when you save them.
let g:ale_fix_on_save = 1

" Fix Limelight on certain themes.
" Color name (:help cterm-colors) or ANSI code
let g:limelight_conceal_ctermfg = 'gray'
let g:limelight_conceal_ctermfg = 240

" Color name (:help gui-colors) or RGB color
let g:limelight_conceal_guifg = 'DarkGray'
let g:limelight_conceal_guifg = '#777777'

" Default: 0.5
let g:limelight_default_coefficient = 0.7

" Number of preceding/following paragraphs to include (default: 0)
let g:limelight_paragraph_span = 1

" Beginning/end of paragraph
"   When there's no empty line between the paragraphs
"   and each paragraph starts with indentation
let g:limelight_bop = '^\s'
let g:limelight_eop = '\ze\n^\s'

" Highlighting priority (default: 10)
"   Set it to -1 not to overrule hlsearch
let g:limelight_priority = -1
